<?xml version="1.0" encoding="utf-8"?>
<BindingListsSet id="axisDetail_bindingLists"
  xmlns="http://www.br-automation.com/iat2015/bindingList/engineering/v2"
  xmlns:bt="http://www.br-automation.com/iat2015/bindingListTypes/engineering/v2"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <BindingLists>
      <!--
      <List xsi:type="opcUa" id="indexList1" attribute="value">
      <bt:Element index="0" refId="::iatClient:clientSlots[0].IpAddress"/>
      <bt:Element index="1" refId="::iatClient:clientSlots[1].IpAddress"/>
      <bt:Element index="2" refId="::iatClient:clientSlots[2].IpAddress"/>
      <bt:Element index="3" refId="::iatClient:clientSlots[3].IpAddress"/>
      <bt:Element index="4" refId="::iatClient:clientSlots[4].IpAddress"/>
    </List>
    -->
    <!-- List of status, states, and move req structures for use in compound widget -->
    <!-- Index is an axis id, and the return is a structure instance -->

    <!-- Axis Number -->
    <!-- Use axis 0 (dummy axis) when no slave is expected -->
    <List xsi:type="opcUa" id="cmpwid_AxisNumber_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].AxisNo"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].AxisNo"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].AxisNo"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].AxisNo"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].AxisNo"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].AxisNo"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].AxisNo"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].AxisNo"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].AxisNo"/>
      <bt:Default refId="::AsGlobalPV:axes[0].AxisNo"/>
    </List>

    <!-- Axis status stuctures for use in compound widget structure binding -->
    <List xsi:type="opcUaComplexObject" id="cmpwid_axesStatus_list">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status"/>
    </List>

    <!-- Axis Position and Velocity -->
    <!-- These lists support the dynamic nature of the handwheel slave.  The normal
    axis case is handled with structure binding, but these values are needed as discrete
    values, broken out from a strurcture binding of slaveStatus because the handwheel
    slave is dynamic, and therefore so are the units, so the units need to change
    based on the actual values looked up in OPC UA and units are based on OPC UA config. -->
    <!-- Position -->
    <List xsi:type="opcUa" id="cmpwid_AxisPos_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.Position"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.Position"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.Position"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.Position"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.Position"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.Position"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.Position"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.Position"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.Position"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.Position"/>
    </List>
    
    <!-- Velocity -->
    <!-- Use axis 0 (dummy axis) when no slave is expected -->
    <List xsi:type="opcUa" id="cmpwid_AxisVel_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.Velocity"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.Velocity"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.Velocity"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.Velocity"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.Velocity"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.Velocity"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.Velocity"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.Velocity"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.Velocity"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.Velocity"/>
    </List>

    <!-- Axis status stuctures for use in compound widget structure binding -->
    <List xsi:type="opcUaComplexObject" id="cmpwid_axesPositionLimits_list">
      <bt:Element index="0" refId="::AsGlobalPV:gr_AxisPositionLimits[0]"/>
      <bt:Element index="1" refId="::AsGlobalPV:gr_AxisPositionLimits[1]"/>
      <bt:Element index="2" refId="::AsGlobalPV:gr_AxisPositionLimits[2]"/>
      <bt:Element index="3" refId="::AsGlobalPV:gr_AxisPositionLimits[3]"/>
      <bt:Element index="4" refId="::AsGlobalPV:gr_AxisPositionLimits[4]"/>
      <bt:Element index="5" refId="::AsGlobalPV:gr_AxisPositionLimits[5]"/>
      <bt:Element index="6" refId="::AsGlobalPV:gr_AxisPositionLimits[6]"/>
      <bt:Element index="7" refId="::AsGlobalPV:gr_AxisPositionLimits[7]"/>
      <bt:Element index="8" refId="::AsGlobalPV:gr_AxisPositionLimits[8]"/>
      <bt:Default refId="::AsGlobalPV:gr_AxisPositionLimits[0]"/>
    </List>

    <!-- Axis move parameters for use in compound widget structure binding -->
    <List xsi:type="opcUaComplexObject" id="cmpwid_axesMoveParams_list">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].MoveParameters"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].MoveParameters"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].MoveParameters"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].MoveParameters"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].MoveParameters"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].MoveParameters"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].MoveParameters"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].MoveParameters"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].MoveParameters"/>
      <bt:Default refId="::AsGlobalPV:axes[0].MoveParameters"/>
    </List>

    <!-- Axis request stuctures for use in compound widget structure binding -->
    <List xsi:type="opcUaComplexObject" id="cmpwid_libraryAxisReq_list">
      <bt:Element index="0" refId="::OmSafeDev:hmiLibraryAxisReqs[0]"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiLibraryAxisReqs[1]"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiLibraryAxisReqs[2]"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiLibraryAxisReqs[3]"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiLibraryAxisReqs[4]"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiLibraryAxisReqs[5]"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiLibraryAxisReqs[6]"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiLibraryAxisReqs[7]"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiLibraryAxisReqs[8]"/>
      <bt:Default refId="::OmSafeDev:hmiLibraryAxisReqs[0]"/>
    </List>
    
    <!-- Axis request stuctures for use in compound widget structure binding -->
    <List xsi:type="opcUaComplexObject" id="cmpwid_machineAxisReq_list">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0]"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1]"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2]"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3]"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4]"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5]"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6]"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7]"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8]"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0]"/>
    </List>

    <!-- Axis slave status stuctures for use in compound widget structure binding -->
    <List xsi:type="opcUaComplexObject" id="cmpwid_axesStatusSlave_list">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].StatusSlave"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].StatusSlave"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].StatusSlave"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].StatusSlave"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].StatusSlave"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].StatusSlave"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].StatusSlave"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].StatusSlave"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].StatusSlave"/>
      <bt:Default refId="::AsGlobalPV:axes[0].StatusSlave"/>
    </List>
    
    <!-- Boolean status values -->
    <!-- Given an axis index, return a status value -->
    <!-- Is Rdy for power -->
    <List xsi:type="opcUa" id="cmpwid_IsReadyToPowerOn_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsReadyToPowerOn"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsReadyToPowerOn"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsReadyToPowerOn"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsReadyToPowerOn"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsReadyToPowerOn"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsReadyToPowerOn"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsReadyToPowerOn"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsReadyToPowerOn"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsReadyToPowerOn"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsReadyToPowerOn"/>
    </List>
    <!-- Is Homed -->
    <List xsi:type="opcUa" id="cmpwid_IsHomed_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsHomed"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsHomed"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsHomed"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsHomed"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsHomed"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsHomed"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsHomed"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsHomed"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsHomed"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsHomed"/>
    </List>
    <!-- Enabled (Is Powered) -->
    <List xsi:type="opcUa" id="cmpwid_IsPoweredOn_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsPoweredOn"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsPoweredOn"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsPoweredOn"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsPoweredOn"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsPoweredOn"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsPoweredOn"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsPoweredOn"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsPoweredOn"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsPoweredOn"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsPoweredOn"/>
    </List>
    <!-- Is Brake Manually Released -->
    <List xsi:type="opcUa" id="cmpwid_IsBrakeManRel_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsBrakeManuallyReleased"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsBrakeManuallyReleased"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsBrakeManuallyReleased"/>
    </List>
    <!-- Is Move Active -->
    <List xsi:type="opcUa" id="cmpwid_IsMoveActive_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsMoveActive"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsMoveActive"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsMoveActive"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsMoveActive"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsMoveActive"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsMoveActive"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsMoveActive"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsMoveActive"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsMoveActive"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsMoveActive"/>
    </List>
    <!-- Is At Position -->
    <List xsi:type="opcUa" id="cmpwid_IsInPosition_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsInPosition"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsInPosition"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsInPosition"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsInPosition"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsInPosition"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsInPosition"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsInPosition"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsInPosition"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsInPosition"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsInPosition"/>
    </List>
    <!-- Is Move Done -->
    <List xsi:type="opcUa" id="cmpwid_IsMoveDone_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsMoveDone"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsMoveDone"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsMoveDone"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsMoveDone"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsMoveDone"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsMoveDone"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsMoveDone"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsMoveDone"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsMoveDone"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsMoveDone"/>
    </List>
    <!-- Is Stopped -->
    <List xsi:type="opcUa" id="cmpwid_IsStopped_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsStopped"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsStopped"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsStopped"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsStopped"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsStopped"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsStopped"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsStopped"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsStopped"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsStopped"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsStopped"/>
    </List>
    
    <!-- PlcOpenState -->
    <List xsi:type="opcUa" id="cmpwid_PlcOpenState_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.PlcOpenState"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.PlcOpenState"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.PlcOpenState"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.PlcOpenState"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.PlcOpenState"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.PlcOpenState"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.PlcOpenState"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.PlcOpenState"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.PlcOpenState"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.PlcOpenState"/>
    </List>
    
    <!-- State Machine State -->
    <List xsi:type="opcUa" id="cmpwid_axesSMState_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].SMState"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].SMState"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].SMState"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].SMState"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].SMState"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].SMState"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].SMState"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].SMState"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].SMState"/>
      <bt:Default refId="::AsGlobalPV:axes[0].SMState"/>
    </List>

    <!-- Coordinated (Slave) Axis related -->
    
    <!-- Slave Axis Number -->
    <List xsi:type="opcUa" id="cmpwid_SlaveAxisNumber_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].CouplingParameters.SlaveAxisNo"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].CouplingParameters.SlaveAxisNo"/>
      <bt:Default refId="::AsGlobalPV:axes[0].CouplingParameters.SlaveAxisNo"/>
    </List>

    <!-- Is Coord Slave Ready -->
    <List xsi:type="opcUa" id="cmpwid_IsCoordSlaveRdy_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsCoordSlaveReady"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsCoordSlaveReady"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsCoordSlaveReady"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsCoordSlaveReady"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsCoordSlaveReady"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsCoordSlaveReady"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsCoordSlaveReady"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsCoordSlaveReady"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsCoordSlaveReady"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsCoordSlaveReady"/>
    </List>
    
    <!-- Is Coord Master Ready -->
    <List xsi:type="opcUa" id="cmpwid_IsCoordMasterRdy_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsCoordMasterReady"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsCoordMasterReady"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsCoordMasterReady"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsCoordMasterReady"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsCoordMasterReady"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsCoordMasterReady"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsCoordMasterReady"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsCoordMasterReady"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsCoordMasterReady"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsCoordMasterReady"/>
    </List>
    
    <!-- Is Coord Axis In Compensation -->
    <List xsi:type="opcUa" id="cmpwid_IsCoordInComp_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsCoordInCompensation"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsCoordInCompensation"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsCoordInCompensation"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsCoordInCompensation"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsCoordInCompensation"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsCoordInCompensation"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsCoordInCompensation"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsCoordInCompensation"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsCoordInCompensation"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsCoordInCompensation"/>
    </List>

    <!-- Is Coord Axis In Sync -->
    <List xsi:type="opcUa" id="cmpwid_IsCoordInSync_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsCoordInSync"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsCoordInSync"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsCoordInSync"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsCoordInSync"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsCoordInSync"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsCoordInSync"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsCoordInSync"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsCoordInSync"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsCoordInSync"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsCoordInSync"/>
    </List>

    <!-- Is Coord Offset Done -->
    <List xsi:type="opcUa" id="cmpwid_IsCoordOffsetDone_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsCoordOffsetDone"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsCoordOffsetDone"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsCoordOffsetDone"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsCoordOffsetDone"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsCoordOffsetDone"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsCoordOffsetDone"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsCoordOffsetDone"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsCoordOffsetDone"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsCoordOffsetDone"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsCoordOffsetDone"/>
    </List>

    <!-- Is Coord Phassing Done -->
    <List xsi:type="opcUa" id="cmpwid_IsCoordPhasingDone_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.IsCoordPhasingDone"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.IsCoordPhasingDone"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.IsCoordPhasingDone"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.IsCoordPhasingDone"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.IsCoordPhasingDone"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.IsCoordPhasingDone"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.IsCoordPhasingDone"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.IsCoordPhasingDone"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.IsCoordPhasingDone"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.IsCoordPhasingDone"/>
    </List>
   
    
    <!-- Coord Actual Offset Shift -->
    <List xsi:type="opcUa" id="cmpwid_CoordActualOffsetShift_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.CoordActualOffsetShift"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.CoordActualOffsetShift"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.CoordActualOffsetShift"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.CoordActualOffsetShift"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.CoordActualOffsetShift"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.CoordActualOffsetShift"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.CoordActualOffsetShift"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.CoordActualOffsetShift"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.CoordActualOffsetShift"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.CoordActualOffsetShift"/>
    </List>

    <!-- Coord Actual Phase Shift -->
    <List xsi:type="opcUa" id="cmpwid_CoordActualPhaseShift_list" attribute="value">
      <bt:Element index="0" refId="::AsGlobalPV:axes[0].Status.CoordActualPhaseShift"/>
      <bt:Element index="1" refId="::AsGlobalPV:axes[1].Status.CoordActualPhaseShift"/>
      <bt:Element index="2" refId="::AsGlobalPV:axes[2].Status.CoordActualPhaseShift"/>
      <bt:Element index="3" refId="::AsGlobalPV:axes[3].Status.CoordActualPhaseShift"/>
      <bt:Element index="4" refId="::AsGlobalPV:axes[4].Status.CoordActualPhaseShift"/>
      <bt:Element index="5" refId="::AsGlobalPV:axes[5].Status.CoordActualPhaseShift"/>
      <bt:Element index="6" refId="::AsGlobalPV:axes[6].Status.CoordActualPhaseShift"/>
      <bt:Element index="7" refId="::AsGlobalPV:axes[7].Status.CoordActualPhaseShift"/>
      <bt:Element index="8" refId="::AsGlobalPV:axes[8].Status.CoordActualPhaseShift"/>
      <bt:Default refId="::AsGlobalPV:axes[0].Status.CoordActualPhaseShift"/>
    </List>

    <!-- List of unit strings to assign to compound widget properties -->
    <!-- Index is an axis ID and the return value is the value of a session variable which holds a unit string -->
    <List xsi:type="session" id="cmpwid_posUnits_list" attribute="value">
      <bt:Element index="0" refId="svLinPosUnits"/>
      <bt:Element index="1" refId="svRevPosUnits"/>
      <bt:Element index="2" refId="svAngPosUnits"/>
      <bt:Element index="3" refId="svAngPosUnits"/>
      <bt:Element index="4" refId="svLinPosUnits"/>
      <bt:Element index="5" refId="svLinPosUnits"/>
      <bt:Element index="6" refId="svLinPosUnits"/>
      <bt:Element index="7" refId="svAngPosUnits"/>
      <bt:Element index="8" refId="svRevPosUnits"/>
      <bt:Default refId="svLinPosUnits"/>
    </List>
    
    <List xsi:type="session" id="cmpwid_velUnits_list" attribute="value">
      <bt:Element index="0" refId="svLinVelUnits"/>
      <bt:Element index="1" refId="svRevVelUnits"/>
      <bt:Element index="2" refId="svAngVelUnits"/>
      <bt:Element index="3" refId="svAngVelUnits"/>
      <bt:Element index="4" refId="svLinVelUnits"/>
      <bt:Element index="5" refId="svLinVelUnits"/>
      <bt:Element index="6" refId="svLinVelUnits"/>
      <bt:Element index="7" refId="svAngVelUnits"/>
      <bt:Element index="8" refId="svRevVelUnits"/>
      <bt:Default refId="svLinVelUnits"/>
    </List>
    
    <List xsi:type="session" id="cmpwid_accelUnits_list" attribute="value">
      <bt:Element index="0" refId="svLinAccelUnits"/>
      <bt:Element index="1" refId="svRevAccelUnits"/>
      <bt:Element index="2" refId="svAngAccelUnits"/>
      <bt:Element index="3" refId="svAngAccelUnits"/>
      <bt:Element index="4" refId="svLinAccelUnits"/>
      <bt:Element index="5" refId="svLinAccelUnits"/>
      <bt:Element index="6" refId="svLinAccelUnits"/>
      <bt:Element index="7" refId="svAngAccelUnits"/>
      <bt:Element index="8" refId="svRevAccelUnits"/>
      <bt:Default refId="svLinAccelUnits"/>
    </List>

    <List xsi:type="session" id="cmpwid_jerkUnits_list" attribute="value">
      <bt:Element index="0" refId="svLinJerkUnits"/>
      <bt:Element index="1" refId="svRevJerkUnits"/>
      <bt:Element index="2" refId="svAngJerkUnits"/>
      <bt:Element index="3" refId="svAngJerkUnits"/>
      <bt:Element index="4" refId="svLinJerkUnits"/>
      <bt:Element index="5" refId="svLinJerkUnits"/>
      <bt:Element index="6" refId="svLinJerkUnits"/>
      <bt:Element index="7" refId="svAngJerkUnits"/>
      <bt:Element index="8" refId="svRevJerkUnits"/>
      <bt:Default refId="svLinJerkUnits"/>
    </List>

    <!-- Axis Move Type and Direction -->
    <!-- Given an axis index, return the axis move type address -->
    <!-- If it was used directly, it could be included in the structure binding,
    (see cmpwid_axisReq_list earlir in this file) and individual data points would
    not need to be handled individually. Instead, use a property and this list lookup
    so the selections can be manipulated easier with events and/or actions. -->
    <!-- Move Designation -->
    <!-- Map OPC variable move designations -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMoveDesignation_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].moveDesignation"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].moveDesignation"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].moveDesignation"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].moveDesignation"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].moveDesignation"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].moveDesignation"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].moveDesignation"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].moveDesignation"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].moveDesignation"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].moveDesignation"/>
    </List>
    
    <!-- Axis Move Direction -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMoveDirection_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].direction"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].direction"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].direction"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].direction"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].direction"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].direction"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].direction"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].direction"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].direction"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].direction"/>
    </List>

    <!-- Axis Move Direction Enable-->
    <!-- Positive direction -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMoveDirectionPosEnable_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].directionPosEnable"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].directionPosEnable"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].directionPosEnable"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].directionPosEnable"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].directionPosEnable"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].directionPosEnable"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].directionPosEnable"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].directionPosEnable"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].directionPosEnable"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].directionPosEnable"/>
    </List>
    <!-- Negative direction -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMoveDirectionNegEnable_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].directionNegEnable"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].directionNegEnable"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].directionNegEnable"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].directionNegEnable"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].directionNegEnable"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].directionNegEnable"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].directionNegEnable"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].directionNegEnable"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].directionNegEnable"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].directionNegEnable"/>
    </List>
    <!-- Shortest Path -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMoveDirectionShortestEnable_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].directionShortestEnable"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].directionShortestEnable"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].directionShortestEnable"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].directionShortestEnable"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].directionShortestEnable"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].directionShortestEnable"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].directionShortestEnable"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].directionShortestEnable"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].directionShortestEnable"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].directionShortestEnable"/>
    </List>
    
    <!-- Axis Distance and Position Move Parameter Enable-->
    <!-- Distance -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMoveDistanceEnable_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].moveDistanceEnable"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].moveDistanceEnable"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].moveDistanceEnable"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].moveDistanceEnable"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].moveDistanceEnable"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].moveDistanceEnable"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].moveDistanceEnable"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].moveDistanceEnable"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].moveDistanceEnable"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].moveDistanceEnable"/>
    </List>
    <!-- Position -->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqMovePositionEnable_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].movePositionEnable"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].movePositionEnable"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].movePositionEnable"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].movePositionEnable"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].movePositionEnable"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].movePositionEnable"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].movePositionEnable"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].movePositionEnable"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].movePositionEnable"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].movePositionEnable"/>
    </List>

    <!-- Shift parameters Enable-->
    <List xsi:type="opcUa" id="cmpwid_manAxisReqShiftEnable_list" attribute="value">
      <bt:Element index="0" refId="::OmSafeDev:hmiMachineAxisReqs[0].shiftEnable"/>
      <bt:Element index="1" refId="::OmSafeDev:hmiMachineAxisReqs[1].shiftEnable"/>
      <bt:Element index="2" refId="::OmSafeDev:hmiMachineAxisReqs[2].shiftEnable"/>
      <bt:Element index="3" refId="::OmSafeDev:hmiMachineAxisReqs[3].shiftEnable"/>
      <bt:Element index="4" refId="::OmSafeDev:hmiMachineAxisReqs[4].shiftEnable"/>
      <bt:Element index="5" refId="::OmSafeDev:hmiMachineAxisReqs[5].shiftEnable"/>
      <bt:Element index="6" refId="::OmSafeDev:hmiMachineAxisReqs[6].shiftEnable"/>
      <bt:Element index="7" refId="::OmSafeDev:hmiMachineAxisReqs[7].shiftEnable"/>
      <bt:Element index="8" refId="::OmSafeDev:hmiMachineAxisReqs[8].shiftEnable"/>
      <bt:Default refId="::OmSafeDev:hmiMachineAxisReqs[0].shiftEnable"/>
    </List>
 
  </BindingLists>

</BindingListsSet>
