<?xml version="1.0" encoding="utf-8"?>
<BindingsSet id="cuttingHead_bindings" xmlns="http://www.br-automation.com/iat2015/binding/engineering/v2" xmlns:bt="http://www.br-automation.com/iat2015/bindingListTypes/engineering/v2" xmlns:be="http://www.br-automation.com/iat2015/bindingListEmbedded/engineering/v2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Bindings>
    
    <!-- TEMPLATE -->
    <!-- Set Has Slave Axis property based on variable -->
    <!--
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svVar" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentPage" widgetRefId="WidgetId" attribute="visibility" />
    </Binding>
    -->
   
    <!-- TEMPLATE -->
    <!-- Text Snippet binding: dynamic text strings based on values -->
    <!-- Template to bind an Indexed Text snippet to the UI -->
    <!-- The first one updates the snippet, the second one updates the UI -->
    <!--
    <Binding mode="oneWay">
    <Source xsi:type="opcUa" refId="::MyProgram:MyStatus" attribute="value"/>
    <Target xsi:type="snippet" refId="MySnippetId" attribute="value"/>
    </Binding>

    <Binding mode="oneWay">
    <Source xsi:type="snippet" refId="MySnippetId" attribute="value"/>
    <Target xsi:type="brease" widgetRefId="MyTextOutputWidget" contentRefId="MyContent" attribute="value"/>
    </Binding>
    -->
    
    <!-- TEMPLATE -->
    <!-- Text Snippet binding: dynamic text strings based on a bool variable from an array -->
    <!-- Template to use a variable to get a value from an array of bools,
    and then look up a text string from a text list, and display
    the looked up text on a widget, or in this case compound widget
    property. Note the intermediate variable, svBoolValue isn't necessary,
    but can be a good idea if the same value will be used again; to set
    a style for example. Without this intermediate variable, the snipped
    would be the target for the list lookup, and the source for the brease object.
    
    First use the variable and list binding to get the value. 
    The list holds OPC data points to look up based on the variable selector.
    Put the value into a bool variable.
    <Binding mode="oneWay">
    <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svSelectorVar" attribute="value" />
        <List refId="listDefinedInBindingList" />
      </Source>
      <Target xsi:type="session" refId="svBoolValue" attribute="value" />
    </Binding>
    Now update the snipped based on the variable. Look up the desired text string from 
    another binding list.
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svBoolValue" attribute="value" />
      <Target xsi:type="snippet" refId="bool_ny" attribute="value" />
    </Binding>
    Finally update the widget or in this case Compound Widget Property with the snipped value 
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="bool_ny" attribute="value" />
      <Target xsi:type="brease" widgetRefId="MyWidget1" contentRefId="pageContent" attribute="WidgetProperty1" />
    </Binding>
    -->
    
    <!-- TEMPLATE -->
    <!-- Style binding: Dynamic styles based on values.
    Update a widget style based on a value
    The list holds style names defined under Themes.
    The value could be a session var, or OPC value in this case, is used to look up a 
    style name from the list. This looked up style is then applied to the widget. -->
    <!--
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="opcUa" refId="::AsGlobalPV:axes[0].Status.PlcOpenState" attribute="value" />
        <List refId="ServoStatusGoodBadText" />
      </Source>
      <Target xsi:type="brease" widgetRefId="axisStatus" contentRefId="mainContentCuttingHeadStatus" attribute="style" />
    </Binding>
    -->
    
    <!-- Pass info -->
    <!-- Pass Depth -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.passDepth" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutPassDepth" attribute="node" />
    </Binding>

    <!-- Pass Offset Angle -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.passOffsetAngle" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutPassOffsetAngle" attribute="node" />
    </Binding>

    <!-- Actual Offset Angle -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::AsGlobalPV:axes[3].Status.CalculatedPosition1" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutActualOffset" attribute="node" />
    </Binding>

    <!-- Depth Adj Angle -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.depthAdjAngle" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutDepthAdjAngle" attribute="node" />
    </Binding>
    
    <!-- Start of pass pos -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.startOfPassPosition" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutStartOfPassPos" attribute="node" />
    </Binding>

    <!-- End of pass pos -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.endOfPassPosition" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutEndOfPassPos" attribute="node" />
    </Binding>

    <!-- Pass Distance -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.passDistance" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutPassDistance" attribute="node" />
    </Binding>

    <!-- Pass Distance Traveled -->
    <Binding mode="oneWay">
      <Source xsi:type="opcUa" refId="::ProdCycle:partMotion.passDistanceTraveled" attribute="node" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="numOutPassDistanceTraveled" attribute="node" />
    </Binding>
    
    <!-- Outer Eccentric Axis -->
    <!-- Compound Widget Structure Binding; Axis Status -->
    <!-- Axis Status Structure -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
				<List refId="cmpwid_axesStatus_list" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="StatusStruct" />
    </Binding>

    <!-- Axis Status -->
    <!-- In theory, these status values could come from the complex structure binding above, but we want to
    show boolen values as text, and color the text, so they are mapped discretely to the value and style
    can be manipulated. -->

    <!-- For these status, load the PLC value into a varialbe since it will get used twice:
    Once to determine the text from a snippet, and once to determine the style -->
    
    <!-- Is Ready To Power On -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsReadyToPowerOn_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsReadyToPowerOn" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsReadyToPowerOn" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsReadyToPowerOn" attribute="value" />
    </Binding>
    <!-- Update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsReadyToPowerOn" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsReadyForPowerText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsReadyToPowerOn" attribute="value" />
				<List refId="TextStyleHiGoodLoBad1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsReadyForPowerStyle" />
    </Binding>
    
    <!-- Is Homed -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsHomed_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsHomed" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsHomed" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsHomed" attribute="value" />
    </Binding>
    <!-- Update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsHomed" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsHomedText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsHomed" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsHomedStyle" />
    </Binding>

    <!-- Is Powered On (Enabled) -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsPoweredOn_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsPoweredOn" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsPoweredOn" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsPoweredOn" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsPoweredOn" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsPoweredOnText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsPoweredOn" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsPoweredOnStyle" />
    </Binding>

    <!-- Is Brake Manually Released -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsBrakeManRel_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsBrakeManRel" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsBrakeManRel" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsBrakeManRel" attribute="value" />
    </Binding>
    <!-- Update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsBrakeManRel" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsBrakeManRelText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsBrakeManRel" attribute="value" />
				<List refId="TextStyleLoGoodHiWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsBrakeManRelStyle" />
    </Binding>

    <!-- Is Move Active -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsMoveActive_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsMoveActive" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsMoveActive" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsMoveActive" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsMoveActive" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsMoveActiveText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsMoveActive" attribute="value" />
				<List refId="TextStyleLoGoodHiWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsMoveActiveStyle" />
    </Binding>
    
    <!-- Is At Position -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsInPosition_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsAtPosition" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsAtPosition" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsAtPosition" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsAtPosition" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsAtPositionText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsAtPosition" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsAtPositionStyle" />
    </Binding>

    <!-- Is Move Done -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsMoveDone_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsMoveDone" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsMoveDone" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsMoveDone" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsMoveDone" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsMoveDoneText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsMoveDone" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsMoveDoneStyle" />
    </Binding>
   
    <!-- Is Stopped -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsStopped_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEIsStopped" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEIsStopped" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEIsStopped" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEIsStopped" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsStoppedText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEIsStopped" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="IsStoppedStyle" />
    </Binding>
    
    <!-- Axis Status PLC Open State -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_PlcOpenState_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEStatusInt" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEStatusInt" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEStatusInt" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEStatusInt" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="StatusText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEStatusInt" attribute="value" />
				<List refId="ServoStatusGoodBadText" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="StatusStyle" />
    </Binding>
   
    <!-- Axis State Machine State -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_OUTER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_axesSMState_list" />
      </Source>
      <Target xsi:type="session" refId="svOutEStateInt" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svOutEStateInt" attribute="value" />
      <Target xsi:type="snippet" refId="snOutEStateInt" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snOutEStateInt" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="StateText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svOutEStateInt" attribute="value" />
				<List refId="ServoSmStateGoodBadText" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="OutEAxisStatus" attribute="StateStyle" />
    </Binding>
     
    <!-- Inner Eccentric Axis -->
    <!-- Compound Widget Structure Binding; Axis Status -->
    <!-- Axis Status Structure -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
				<List refId="cmpwid_axesStatus_list" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="StatusStruct" />
    </Binding>

    <!-- Axis Status -->
    <!-- In theory, these status values could come from the complex structure binding above, but we want to
    show boolen values as text, and color the text, so they are mapped discretely to the value and style
    can be manipulated. -->

    <!-- For these status, load the PLC value into a varialbe since it will get used twice:
    Once to determine the text from a snippet, and once to determine the style -->
    
    <!-- Is Ready To Power On -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsReadyToPowerOn_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsReadyToPowerOn" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsReadyToPowerOn" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsReadyToPowerOn" attribute="value" />
    </Binding>
    <!-- Update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsReadyToPowerOn" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsReadyForPowerText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsReadyToPowerOn" attribute="value" />
				<List refId="TextStyleHiGoodLoBad1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsReadyForPowerStyle" />
    </Binding>
    
    <!-- Is Homed -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsHomed_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsHomed" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsHomed" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsHomed" attribute="value" />
    </Binding>
    <!-- Update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsHomed" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsHomedText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsHomed" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsHomedStyle" />
    </Binding>

    <!-- Is Powered On (Enabled) -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsPoweredOn_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsPoweredOn" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsPoweredOn" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsPoweredOn" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsPoweredOn" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsPoweredOnText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsPoweredOn" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsPoweredOnStyle" />
    </Binding>

    <!-- Is Brake Manually Released -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsBrakeManRel_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsBrakeManRel" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsBrakeManRel" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsBrakeManRel" attribute="value" />
    </Binding>
    <!-- Update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsBrakeManRel" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsBrakeManRelText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsBrakeManRel" attribute="value" />
				<List refId="TextStyleLoGoodHiWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsBrakeManRelStyle" />
    </Binding>

    <!-- Is Move Active -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsMoveActive_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsMoveActive" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsMoveActive" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsMoveActive" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsMoveActive" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsMoveActiveText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsMoveActive" attribute="value" />
				<List refId="TextStyleLoGoodHiWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsMoveActiveStyle" />
    </Binding>
    
    <!-- Is At Position -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsInPosition_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsAtPosition" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsAtPosition" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsAtPosition" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsAtPosition" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsAtPositionText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsAtPosition" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsAtPositionStyle" />
    </Binding>

    <!-- Is Move Done -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsMoveDone_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsMoveDone" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsMoveDone" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsMoveDone" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsMoveDone" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsMoveDoneText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsMoveDone" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsMoveDoneStyle" />
    </Binding>
   
    <!-- Is Stopped -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_IsStopped_list" />
      </Source>
      <Target xsi:type="session" refId="svInEIsStopped" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEIsStopped" attribute="value" />
      <Target xsi:type="snippet" refId="snInEIsStopped" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEIsStopped" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsStoppedText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEIsStopped" attribute="value" />
				<List refId="TextStyleHiGoodLoWarn1" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="IsStoppedStyle" />
    </Binding>
    
    <!-- Axis Status PLC Open State -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_PlcOpenState_list" />
      </Source>
      <Target xsi:type="session" refId="svInEStatusInt" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEStatusInt" attribute="value" />
      <Target xsi:type="snippet" refId="snInEStatusInt" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEStatusInt" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="StatusText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEStatusInt" attribute="value" />
				<List refId="ServoStatusGoodBadText" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="StatusStyle" />
    </Binding>
   
    <!-- Axis State Machine State -->
    <!-- Load the selected status into a variable -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
        <Selector xsi:type="session" refId="svAD_INNER_ECCENTRIC" attribute="value" />
        <List refId="cmpwid_axesSMState_list" />
      </Source>
      <Target xsi:type="session" refId="svInEStateInt" attribute="value" />
    </Binding>
    <!-- Now update the snipped based on the variable -->
    <Binding mode="oneWay">
      <Source xsi:type="session" refId="svInEStateInt" attribute="value" />
      <Target xsi:type="snippet" refId="snInEStateInt" attribute="value" />
    </Binding>
    <!-- Finally update the widget or in this case Compound Widget Property with the snipped value -->
    <Binding mode="oneWay">
      <Source xsi:type="snippet" refId="snInEStateInt" attribute="value" />
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="StateText" />
    </Binding>
    <!-- Now update the widget style based on the value -->
    <Binding mode="oneWay">
      <Source xsi:type="listElement">
				<Selector xsi:type="session" refId="svInEStateInt" attribute="value" />
				<List refId="ServoSmStateGoodBadText" />
      </Source>
      <Target xsi:type="brease" contentRefId="mainContentCuttingHead" widgetRefId="InEAxisStatus" attribute="StateStyle" />
    </Binding>
    
</Bindings>
  </BindingsSet>
